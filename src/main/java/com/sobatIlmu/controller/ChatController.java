package com.sobatIlmu.controller;

import com.sobatIlmu.model.ChatRequest;
import com.sobatIlmu.model.ChatResponse;
import com.sobatIlmu.model.Message;
import com.sobatIlmu.model.PromptRequest;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.List;

@CrossOrigin(origins = "*")
@RestController
@Slf4j
public class ChatController {

    @Autowired
    private RestTemplate restTemplate;

    @Value("${openai.model}")
    private String model;

    @Value("${openai.max-completions}")
    private int maxCompletions;

    @Value("${openai.temperature}")
    private double temperature;

    @Value("${openai.api.url}")
    private String apiUrl;

    /**
     * Handles chat requests by sending a prompt to a chat API and returning the response.
     *
     * @param requestBody The prompt message provided by the user.
     * @return The response generated by the chat API.
     */
    @PostMapping("/chat")
    public ChatResponse chat(@RequestBody PromptRequest requestBody) {
        /* Initialize variables */
        ChatResponse chatResponse=null;
        List<Message> ChatMessages = new ArrayList<>();
        ChatRequest.ChatRequestBuilder request = ChatRequest.builder();
        try {
            /* Add user prompt to chat messages */
            ChatMessages.add(new Message("developer","kamu adalah guru yang bernama budi, dan bertugas menjawab pertanyaan murid dalam bahasa indonesia."));
            ChatMessages.add(new Message("user", requestBody.getPrompt()));
            /* Build chat request */
            request
                    .model(model)
                    .messages(ChatMessages)
                    .n(maxCompletions)
                    .temperature(temperature);

            /* Send chat request and obtain response */
            chatResponse = restTemplate.postForObject(apiUrl, request.build(), ChatResponse.class);
        }catch(Exception e) {
            System.out.println("error : "+e.getMessage());
        }
        return chatResponse;
    }

}